col.names(x) = paste('x',1:p,sep='')
x = matrix(rnorm(100),20,5)
x
p=ncol(x)
paste('x',1:p,sep='')
col.names(x) = paste('x',1:p,sep='')
colnames(x) = paste('x',1:p,sep='')
x
eta = x[,1]+x[,2]
y = rbinom(20,1,1/(1+exp(-eta)))
y
train.data = data.frame(x=x,y=y)
train.data
train.data = data.frame(xy)
train.data = data.frame(x,y)
train.data
fit=glm(y~., data=train.data,family='binomial')
fit
n = nrow(x)
p = ncol(x)
colnames(x) = paste('x',1:p,sep='')
ind0 = which(y==0) ##indices for class 0
ind1 = which(y==1) ##indices for class 1
n0 = length(ind0)
n1 = length(ind1)
n0
n1
split
split=TRUE
ind01 = sample(ind0, round(n0)/2) ##use for train classifer
ind02 = setdiff(ind0,ind01) ##use for determine cutoff
ind01
ind-2
ind-2
ind02
train.x = x[c(ind01,ind1), ]
train.y = y[c(ind01,ind1), ]
test.x = x[ind02, ]
n02 = length(test.x)
train.x = x[c(ind01,ind1), ]
train.y = y[c(ind01,ind1)]
test.x = x[ind02, ]
n02 = length(test.x)
train.data = data.frame(x=train.x, y=train.y)
fit = glm(y~., data=train.data, family='binomial')
prob = predict(fit, data.frame(test.x),type='response')
train.data = data.frame(train.x, train.y)
fit = glm(y~., data=train.data, family='binomial')
prob = predict(fit, data.frame(test.x),type='response')
fit
train.x
train.data
train.data = data.frame(train.x, y=train.y)
train.data
fit = glm(y~., data=train.data, family='binomial')
fit
prob = predict(fit, data.frame(test.x),type='response')
prob
