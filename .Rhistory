library(nproc)
fit.slda = slda(x,y,xtest,ytest)
library(glmnet)
library("nproc", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
detach("package:nproc", unload=TRUE)
nproc
library(glmnet)
library(nproc)
fit.slda = slda(x,y,xtest,ytest)
errormat[5:6,i] = fit.slda
slda
source('funs.R')
fit.slda = slda(x,y,xtest,ytest)
errormat[5:6,i] = fit.slda
debug(slda)
fit.slda = slda(x,y,xtest,ytest)
errormat[5:6,i] = fit.slda
pred.y
length(pred.y)
length(test.y)
typI
typeI
typeII
fit.slda
errormat[5:6,i]
model = 1
p = 400
rho = 0.5
n.test = 10000
alpha = 0.1
beta = genbeta(model)
errormat = matrix(0,6,n.num)
for(i in 1:n.num){
n = nlist[i]
cat('n=',n,'\n')
set.seed(randSeed)
x1 = genmnorm(n=n,p=p,rho=rho,beta = beta)
x2 = genmnorm(n=n,p=p,rho=rho,beta = 0)
x = rbind(x1,x2)
y = c(rep(0,n),rep(1,n))
set.seed(0)
x1 = genmnorm(n=n.test,p=p,rho=rho,beta = beta)
x2 = genmnorm(n=n.test,p=p,rho=rho,beta = 0)
xtest = rbind(x1,x2)
ytest = c(rep(0,n.test),rep(1,n.test))
fit  = npc(x, y, method = 'slda',alpha=alpha)
pred = predict(fit,xtest)
yfit = predict(fit, x)
ind0 = which(ytest==0)
typeI = mean(pred$pred.label[ind0]!=ytest[ind0]) #type I error on test set
typeII = mean(pred$pred.label[-ind0]!=ytest[-ind0]) #type I error on test set
errormat[1,i] = typeI
errormat[2,i] = typeII
fit  = npc(x, y, method = 'slda',alpha=alpha, split.ratio = 'adaptive' )
pred = predict(fit,xtest)
#yfit = predict(fit, x)
ind0 = which(ytest==0)
typeI = mean(pred$pred.label[ind0]!=ytest[ind0]) #type I error on test set
typeII = mean(pred$pred.label[-ind0]!=ytest[-ind0]) #type I error on test set
errormat[3,i] = typeI
errormat[4,i] = typeII
fit.slda = slda(x,y,xtest,ytest)
errormat[5:6,i] = fit.slda
}
undebug(slda)
model = 1
p = 400
rho = 0.5
n.test = 10000
alpha = 0.1
beta = genbeta(model)
errormat = matrix(0,6,n.num)
for(i in 1:n.num){
n = nlist[i]
cat('n=',n,'\n')
set.seed(randSeed)
x1 = genmnorm(n=n,p=p,rho=rho,beta = beta)
x2 = genmnorm(n=n,p=p,rho=rho,beta = 0)
x = rbind(x1,x2)
y = c(rep(0,n),rep(1,n))
set.seed(0)
x1 = genmnorm(n=n.test,p=p,rho=rho,beta = beta)
x2 = genmnorm(n=n.test,p=p,rho=rho,beta = 0)
xtest = rbind(x1,x2)
ytest = c(rep(0,n.test),rep(1,n.test))
fit  = npc(x, y, method = 'slda',alpha=alpha)
pred = predict(fit,xtest)
yfit = predict(fit, x)
ind0 = which(ytest==0)
typeI = mean(pred$pred.label[ind0]!=ytest[ind0]) #type I error on test set
typeII = mean(pred$pred.label[-ind0]!=ytest[-ind0]) #type I error on test set
errormat[1,i] = typeI
errormat[2,i] = typeII
fit  = npc(x, y, method = 'slda',alpha=alpha, split.ratio = 'adaptive' )
pred = predict(fit,xtest)
#yfit = predict(fit, x)
ind0 = which(ytest==0)
typeI = mean(pred$pred.label[ind0]!=ytest[ind0]) #type I error on test set
typeII = mean(pred$pred.label[-ind0]!=ytest[-ind0]) #type I error on test set
errormat[3,i] = typeI
errormat[4,i] = typeII
fit.slda = slda(x,y,xtest,ytest)
errormat[5:6,i] = fit.slda
}
errormat
file = paste0('results/lda_',randSeed,'.RData')
save(errormat, file = file)
for (e in commandArgs(TRUE)) {
ta = strsplit(e,"=",fixed=TRUE)
if(! is.na(ta[[1]][2])) {
temp = ta[[1]][2]
temp = as.numeric(temp)
assign(ta[[1]][1],temp)
cat("assigned ",ta[[1]][1]," the value of |",temp,"|\n")
}
}
.libPaths('../rpackages')
library(glmnet)
library(nproc)
source('funs.R')
nlist = c(100,200,300)
n.num = length(nlist)
model = 1
p = 400
rho = 0.5
n.test = 10000
alpha = 0.1
beta = genbeta(model)
errormat = matrix(0,6,n.num)
for(i in 1:n.num){
n = nlist[i]
cat('n=',n,'\n')
set.seed(randSeed)
x1 = genmnorm(n=n,p=p,rho=rho,beta = beta)
x2 = genmnorm(n=n,p=p,rho=rho,beta = 0)
x = rbind(x1,x2)
y = c(rep(0,n),rep(1,n))
set.seed(0)
x1 = genmnorm(n=n.test,p=p,rho=rho,beta = beta)
x2 = genmnorm(n=n.test,p=p,rho=rho,beta = 0)
xtest = rbind(x1,x2)
ytest = c(rep(0,n.test),rep(1,n.test))
fit  = npc(x, y, method = 'slda',alpha=alpha)
pred = predict(fit,xtest)
yfit = predict(fit, x)
ind0 = which(ytest==0)
typeI = mean(pred$pred.label[ind0]!=ytest[ind0]) #type I error on test set
typeII = mean(pred$pred.label[-ind0]!=ytest[-ind0]) #type I error on test set
errormat[1,i] = typeI
errormat[2,i] = typeII
fit  = npc(x, y, method = 'slda',alpha=alpha, split.ratio = 'adaptive' )
pred = predict(fit,xtest)
#yfit = predict(fit, x)
ind0 = which(ytest==0)
typeI = mean(pred$pred.label[ind0]!=ytest[ind0]) #type I error on test set
typeII = mean(pred$pred.label[-ind0]!=ytest[-ind0]) #type I error on test set
errormat[3,i] = typeI
errormat[4,i] = typeII
fit  = npc(x, y, method = 'penlog',alpha=alpha)
pred = predict(fit,xtest)
yfit = predict(fit, x)
ind0 = which(ytest==0)
typeI = mean(pred$pred.label[ind0]!=ytest[ind0]) #type I error on test set
typeII = mean(pred$pred.label[-ind0]!=ytest[-ind0]) #type I error on test set
errormat[5,i] = typeI
errormat[6,i] = typeII
fit.slda = slda(x,y,xtest,ytest)
errormat[7:8,i] = fit.slda
}
file = paste0('results/lda_',randSeed,'.RData')
save(errormat, file = file)
library(nproc)
setwd("~/Dropbox/Projects/np-lda-simu")
library(glmnet)
library(nproc)
source('funs.R')
nlist = c(100,200,300)
n.num = length(nlist)
model = 1
p = 400
rho = 0.5
n.test = 10000
alpha = 0.1
beta = genbeta(model)
errormat = matrix(0,10,n.num)
for(i in 1:n.num){
n = nlist[i]
cat('n=',n,'\n')
set.seed(randSeed)
trdata = genlogi(n=n,p=p,rho=rho,beta = beta)
x = trdata$x
y = trdata$y
set.seed(0)
tedata = genlogi(n=n.test,p=p,rho=rho,beta = beta)
xtest = tedata$x
ytest = tedata$y
fit  = npc(x, y, method = 'slda',alpha=alpha)
pred = predict(fit,xtest)
yfit = predict(fit, x)
ind0 = which(ytest==0)
typeI = mean(pred$pred.label[ind0]!=ytest[ind0]) #type I error on test set
typeII = mean(pred$pred.label[-ind0]!=ytest[-ind0]) #type I error on test set
errormat[1,i] = typeI
errormat[2,i] = typeII
fit  = npc(x, y, method = 'slda',alpha=alpha, split.ratio = 'adaptive' )
pred = predict(fit,xtest)
#yfit = predict(fit, x)
ind0 = which(ytest==0)
typeI = mean(pred$pred.label[ind0]!=ytest[ind0]) #type I error on test set
typeII = mean(pred$pred.label[-ind0]!=ytest[-ind0]) #type I error on test set
errormat[3,i] = typeI
errormat[4,i] = typeII
fit  = npc(x, y, method = 'penlog',alpha=alpha)
pred = predict(fit,xtest)
yfit = predict(fit, x)
ind0 = which(ytest==0)
typeI = mean(pred$pred.label[ind0]!=ytest[ind0]) #type I error on test set
typeII = mean(pred$pred.label[-ind0]!=ytest[-ind0]) #type I error on test set
errormat[5,i] = typeI
errormat[6,i] = typeII
fit  = npc(x, y, method = 'penlog',alpha=alpha, split.ratio = 'adaptive')
pred = predict(fit,xtest)
yfit = predict(fit, x)
ind0 = which(ytest==0)
typeI = mean(pred$pred.label[ind0]!=ytest[ind0]) #type I error on test set
typeII = mean(pred$pred.label[-ind0]!=ytest[-ind0]) #type I error on test set
errormat[7,i] = typeI
errormat[8,i] = typeII
fit.slda = slda(x,y,xtest,ytest)
errormat[9:10,i] = fit.slda
}
randSeed=1
for(i in 1:n.num){
n = nlist[i]
cat('n=',n,'\n')
set.seed(randSeed)
trdata = genlogi(n=n,p=p,rho=rho,beta = beta)
x = trdata$x
y = trdata$y
set.seed(0)
tedata = genlogi(n=n.test,p=p,rho=rho,beta = beta)
xtest = tedata$x
ytest = tedata$y
fit  = npc(x, y, method = 'slda',alpha=alpha)
pred = predict(fit,xtest)
yfit = predict(fit, x)
ind0 = which(ytest==0)
typeI = mean(pred$pred.label[ind0]!=ytest[ind0]) #type I error on test set
typeII = mean(pred$pred.label[-ind0]!=ytest[-ind0]) #type I error on test set
errormat[1,i] = typeI
errormat[2,i] = typeII
fit  = npc(x, y, method = 'slda',alpha=alpha, split.ratio = 'adaptive' )
pred = predict(fit,xtest)
#yfit = predict(fit, x)
ind0 = which(ytest==0)
typeI = mean(pred$pred.label[ind0]!=ytest[ind0]) #type I error on test set
typeII = mean(pred$pred.label[-ind0]!=ytest[-ind0]) #type I error on test set
errormat[3,i] = typeI
errormat[4,i] = typeII
fit  = npc(x, y, method = 'penlog',alpha=alpha)
pred = predict(fit,xtest)
yfit = predict(fit, x)
ind0 = which(ytest==0)
typeI = mean(pred$pred.label[ind0]!=ytest[ind0]) #type I error on test set
typeII = mean(pred$pred.label[-ind0]!=ytest[-ind0]) #type I error on test set
errormat[5,i] = typeI
errormat[6,i] = typeII
fit  = npc(x, y, method = 'penlog',alpha=alpha, split.ratio = 'adaptive')
pred = predict(fit,xtest)
yfit = predict(fit, x)
ind0 = which(ytest==0)
typeI = mean(pred$pred.label[ind0]!=ytest[ind0]) #type I error on test set
typeII = mean(pred$pred.label[-ind0]!=ytest[-ind0]) #type I error on test set
errormat[7,i] = typeI
errormat[8,i] = typeII
fit.slda = slda(x,y,xtest,ytest)
errormat[9:10,i] = fit.slda
}
warnings()
nlist = 2*nlist
for(i in 1:n.num){
n = nlist[i]
cat('n=',n,'\n')
set.seed(randSeed)
trdata = genlogi(n=n,p=p,rho=rho,beta = beta)
x = trdata$x
y = trdata$y
set.seed(0)
tedata = genlogi(n=n.test,p=p,rho=rho,beta = beta)
xtest = tedata$x
ytest = tedata$y
fit  = npc(x, y, method = 'slda',alpha=alpha)
pred = predict(fit,xtest)
yfit = predict(fit, x)
ind0 = which(ytest==0)
typeI = mean(pred$pred.label[ind0]!=ytest[ind0]) #type I error on test set
typeII = mean(pred$pred.label[-ind0]!=ytest[-ind0]) #type I error on test set
errormat[1,i] = typeI
errormat[2,i] = typeII
fit  = npc(x, y, method = 'slda',alpha=alpha, split.ratio = 'adaptive' )
pred = predict(fit,xtest)
#yfit = predict(fit, x)
ind0 = which(ytest==0)
typeI = mean(pred$pred.label[ind0]!=ytest[ind0]) #type I error on test set
typeII = mean(pred$pred.label[-ind0]!=ytest[-ind0]) #type I error on test set
errormat[3,i] = typeI
errormat[4,i] = typeII
fit  = npc(x, y, method = 'penlog',alpha=alpha)
pred = predict(fit,xtest)
yfit = predict(fit, x)
ind0 = which(ytest==0)
typeI = mean(pred$pred.label[ind0]!=ytest[ind0]) #type I error on test set
typeII = mean(pred$pred.label[-ind0]!=ytest[-ind0]) #type I error on test set
errormat[5,i] = typeI
errormat[6,i] = typeII
fit  = npc(x, y, method = 'penlog',alpha=alpha, split.ratio = 'adaptive')
pred = predict(fit,xtest)
yfit = predict(fit, x)
ind0 = which(ytest==0)
typeI = mean(pred$pred.label[ind0]!=ytest[ind0]) #type I error on test set
typeII = mean(pred$pred.label[-ind0]!=ytest[-ind0]) #type I error on test set
errormat[7,i] = typeI
errormat[8,i] = typeII
fit.slda = slda(x,y,xtest,ytest)
errormat[9:10,i] = fit.slda
}
errormat
library(nproc)
setwd("~/Dropbox/Projects/NP-LDA/np-lda-simu")
genmnorm.s<-function(n = 200, p = 400, s = 1, rho = 0, corr = 'decay'){
xn = matrix(rnorm(n*p),n,p)
cholname = paste0('chol/',p,'_',rho,'_', corr,'.RData')
if(file.exists(cholname)){
load(cholname)
} else{
if(corr == 'decay'){
corrmat = rho^(abs(outer(1:p,1:p,'-')))
} else{
corrmat = 1-rho+diag(rep(rho,p))
}
cholmat = chol(corrmat)
save(cholmat, corrmat, file = cholname)
}
if(s>0){
beta = rep(1,s)
beta = c(beta,rep(0,p-length(beta)))
mu = as.vector(corrmat%*%beta)
delta = as.vector(t(beta)%*%corrmat%*%beta)
mu = 2*mu/sqrt(delta)
#if(!is.null(beta)){
#  beta = c(beta,rep(0,p-length(beta)))
#  mu = as.vector(corrmat%*%beta)
#}
x = t(mu + t(xn%*%cholmat))
} else{
x = xn%*%cholmat
}
x
}
n = 300
p = 1000
rho = 0.5
n.test = 10000
alpha = 0.1
s = 7
set.seed(0)
x1 = genmnorm.s(n=n.test,p=p,rho=rho,s=s)
x2 = genmnorm.s(n=n.test,p=p,rho=rho,s=0)
xtest = rbind(x1,x2)
ytest = c(rep(0,n.test),rep(1,n.test))
split.ratio = 0.7
cat('s=',s,'split.ratio=',split.ratio,'\n')
x1 = genmnorm.s(n=n,p=p,rho=rho,s=s)
x2 = genmnorm.s(n=n,p=p,rho=rho,s=0)
x = rbind(x1,x2)
y = c(rep(0,n),rep(1,n))
fit  = npc(x, y, method = 'slda',alpha=alpha, split.ratio = split.ratio )
pred = predict(fit,xtest)
ind0 = which(ytest==0)
typeI = mean(pred$pred.label[ind0]!=ytest[ind0]) #type I error on test set
typeII = mean(pred$pred.label[-ind0]!=ytest[-ind0]) #type I error on test set
print(typeI)
x1 = genmnorm.s(n=n,p=p,rho=rho,s=s)
x2 = genmnorm.s(n=n,p=p,rho=rho,s=0)
x = rbind(x1,x2)
y = c(rep(0,n),rep(1,n))
fit  = npc(x, y, method = 'slda',alpha=alpha, split.ratio = split.ratio )
pred = predict(fit,xtest)
ind0 = which(ytest==0)
typeI = mean(pred$pred.label[ind0]!=ytest[ind0]) #type I error on test set
typeII = mean(pred$pred.label[-ind0]!=ytest[-ind0]) #type I error on test set
print(typeI)
x1 = genmnorm.s(n=n,p=p,rho=rho,s=s)
x2 = genmnorm.s(n=n,p=p,rho=rho,s=0)
x = rbind(x1,x2)
y = c(rep(0,n),rep(1,n))
fit  = npc(x, y, method = 'slda',alpha=alpha, split.ratio = split.ratio )
pred = predict(fit,xtest)
ind0 = which(ytest==0)
typeI = mean(pred$pred.label[ind0]!=ytest[ind0]) #type I error on test set
typeII = mean(pred$pred.label[-ind0]!=ytest[-ind0]) #type I error on test set
print(typeI)
x1 = genmnorm.s(n=n,p=p,rho=rho,s=s)
x2 = genmnorm.s(n=n,p=p,rho=rho,s=0)
x = rbind(x1,x2)
y = c(rep(0,n),rep(1,n))
fit  = npc(x, y, method = 'slda',alpha=alpha, split.ratio = split.ratio )
pred = predict(fit,xtest)
ind0 = which(ytest==0)
typeI = mean(pred$pred.label[ind0]!=ytest[ind0]) #type I error on test set
typeII = mean(pred$pred.label[-ind0]!=ytest[-ind0]) #type I error on test set
print(typeI)
x1 = genmnorm.s(n=n,p=p,rho=rho,s=s)
x2 = genmnorm.s(n=n,p=p,rho=rho,s=0)
x = rbind(x1,x2)
y = c(rep(0,n),rep(1,n))
fit  = npc(x, y, method = 'slda',alpha=alpha, split.ratio = split.ratio )
pred = predict(fit,xtest)
ind0 = which(ytest==0)
typeI = mean(pred$pred.label[ind0]!=ytest[ind0]) #type I error on test set
typeII = mean(pred$pred.label[-ind0]!=ytest[-ind0]) #type I error on test set
print(typeI)
x1 = genmnorm.s(n=n,p=p,rho=rho,s=s)
x2 = genmnorm.s(n=n,p=p,rho=rho,s=0)
x = rbind(x1,x2)
y = c(rep(0,n),rep(1,n))
fit  = npc(x, y, method = 'slda',alpha=alpha, split.ratio = split.ratio )
pred = predict(fit,xtest)
ind0 = which(ytest==0)
typeI = mean(pred$pred.label[ind0]!=ytest[ind0]) #type I error on test set
typeII = mean(pred$pred.label[-ind0]!=ytest[-ind0]) #type I error on test set
print(typeI)
x1 = genmnorm.s(n=n,p=p,rho=rho,s=s)
x2 = genmnorm.s(n=n,p=p,rho=rho,s=0)
x = rbind(x1,x2)
y = c(rep(0,n),rep(1,n))
fit  = npc(x, y, method = 'slda',alpha=alpha, split.ratio = split.ratio )
pred = predict(fit,xtest)
ind0 = which(ytest==0)
typeI = mean(pred$pred.label[ind0]!=ytest[ind0]) #type I error on test set
typeII = mean(pred$pred.label[-ind0]!=ytest[-ind0]) #type I error on test set
print(typeI)
x1 = genmnorm.s(n=n,p=p,rho=rho,s=s)
x2 = genmnorm.s(n=n,p=p,rho=rho,s=0)
x = rbind(x1,x2)
y = c(rep(0,n),rep(1,n))
fit  = npc(x, y, method = 'slda',alpha=alpha, split.ratio = split.ratio )
pred = predict(fit,xtest)
ind0 = which(ytest==0)
typeI = mean(pred$pred.label[ind0]!=ytest[ind0]) #type I error on test set
typeII = mean(pred$pred.label[-ind0]!=ytest[-ind0]) #type I error on test set
print(typeI)
x1 = genmnorm.s(n=n,p=p,rho=rho,s=s)
x2 = genmnorm.s(n=n,p=p,rho=rho,s=0)
x = rbind(x1,x2)
y = c(rep(0,n),rep(1,n))
fit  = npc(x, y, method = 'slda',alpha=alpha, split.ratio = split.ratio )
pred = predict(fit,xtest)
ind0 = which(ytest==0)
typeI = mean(pred$pred.label[ind0]!=ytest[ind0]) #type I error on test set
typeII = mean(pred$pred.label[-ind0]!=ytest[-ind0]) #type I error on test set
print(typeI)
x1 = genmnorm.s(n=n,p=p,rho=rho,s=s)
x2 = genmnorm.s(n=n,p=p,rho=rho,s=0)
x = rbind(x1,x2)
y = c(rep(0,n),rep(1,n))
fit  = npc(x, y, method = 'slda',alpha=alpha, split.ratio = split.ratio )
pred = predict(fit,xtest)
ind0 = which(ytest==0)
typeI = mean(pred$pred.label[ind0]!=ytest[ind0]) #type I error on test set
typeII = mean(pred$pred.label[-ind0]!=ytest[-ind0]) #type I error on test set
print(typeI)
x1 = genmnorm.s(n=n,p=p,rho=rho,s=s)
x2 = genmnorm.s(n=n,p=p,rho=rho,s=0)
x = rbind(x1,x2)
y = c(rep(0,n),rep(1,n))
fit  = npc(x, y, method = 'slda',alpha=alpha, split.ratio = split.ratio )
pred = predict(fit,xtest)
ind0 = which(ytest==0)
typeI = mean(pred$pred.label[ind0]!=ytest[ind0]) #type I error on test set
typeII = mean(pred$pred.label[-ind0]!=ytest[-ind0]) #type I error on test set
print(typeI)
x1 = genmnorm.s(n=n,p=p,rho=rho,s=s)
x2 = genmnorm.s(n=n,p=p,rho=rho,s=0)
x = rbind(x1,x2)
y = c(rep(0,n),rep(1,n))
fit  = npc(x, y, method = 'slda',alpha=alpha, split.ratio = split.ratio )
pred = predict(fit,xtest)
ind0 = which(ytest==0)
typeI = mean(pred$pred.label[ind0]!=ytest[ind0]) #type I error on test set
typeII = mean(pred$pred.label[-ind0]!=ytest[-ind0]) #type I error on test set
print(typeI)
x1 = genmnorm.s(n=n,p=p,rho=rho,s=s)
x2 = genmnorm.s(n=n,p=p,rho=rho,s=0)
x = rbind(x1,x2)
y = c(rep(0,n),rep(1,n))
fit  = npc(x, y, method = 'slda',alpha=alpha, split.ratio = split.ratio )
pred = predict(fit,xtest)
ind0 = which(ytest==0)
typeI = mean(pred$pred.label[ind0]!=ytest[ind0]) #type I error on test set
typeII = mean(pred$pred.label[-ind0]!=ytest[-ind0]) #type I error on test set
print(typeI)
x1 = genmnorm.s(n=n,p=p,rho=rho,s=s)
x2 = genmnorm.s(n=n,p=p,rho=rho,s=0)
x = rbind(x1,x2)
y = c(rep(0,n),rep(1,n))
fit  = npc(x, y, method = 'slda',alpha=alpha, split.ratio = split.ratio )
pred = predict(fit,xtest)
ind0 = which(ytest==0)
typeI = mean(pred$pred.label[ind0]!=ytest[ind0]) #type I error on test set
typeII = mean(pred$pred.label[-ind0]!=ytest[-ind0]) #type I error on test set
print(typeI)
